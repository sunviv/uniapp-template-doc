import{_ as a,c as i,o as e,ag as t}from"./chunks/framework.D-I4qdo3.js";const k=JSON.parse('{"title":"静态资源使用","description":"","frontmatter":{},"headers":[],"relativePath":"guides/static.md","filePath":"guides/static.md"}'),l={name:"guides/static.md"};function n(o,s,r,c,p,h){return e(),i("div",null,s[0]||(s[0]=[t('<h1 id="静态资源使用" tabindex="-1">静态资源使用 <a class="header-anchor" href="#静态资源使用" aria-label="Permalink to &quot;静态资源使用&quot;">​</a></h1><h2 id="iconify-图标使用" tabindex="-1">Iconify 图标使用 <a class="header-anchor" href="#iconify-图标使用" aria-label="Permalink to &quot;Iconify 图标使用&quot;">​</a></h2><ul><li><p>安装 vscode 智能提示的插件: <a href="https://marketplace.visualstudio.com/items?itemName=antfu.iconify" target="_blank" rel="noreferrer">Iconify IntelliSense</a></p></li><li><p>找图标：网址  <a href="https://icones.js.org/" target="_blank" rel="noreferrer">https://icones.js.org/</a>  或者 vscode 安装 - <a href="https://marketplace.visualstudio.com/items?itemName=afzalsayed96.icones" target="_blank" rel="noreferrer">Icônes</a></p></li><li><p>确定图标名字：找到图标后复制名字 如：&#39;mdi:adjust&#39; 或者 &#39;mdi-adjust&#39;，则对应的 uniapp 写法为：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">view class</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;i-mdi-alarm text-40 text-red-5&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> /&gt;</span></span></code></pre></div></li><li><p>设置样式：同 html 标签一样直接应用 style 属性或者 class 属性; 通过设置 color 和 font-size 属性设置对应的颜色和大小</p></li></ul><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>icones 图标库目前拥有超过 500 万个图标，为了减少项目安装依赖时间，目前仅安装了 <a href="https://icones.js.org/collection/mdi" target="_blank" rel="noreferrer">Material Design Icons</a> 如需其它图标库，可自行安装，例如，以下命令会安装 <a href="https://icones.js.org/collection/ri" target="_blank" rel="noreferrer">Remix Icon</a></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @iconify-json/ri</span></span></code></pre></div><p><strong>无论安装多少 Iconify 图标都不会影响打包体积</strong></p></div><h2 id="本地图片、线上图片使用" tabindex="-1">本地图片、线上图片使用 <a class="header-anchor" href="#本地图片、线上图片使用" aria-label="Permalink to &quot;本地图片、线上图片使用&quot;">​</a></h2><p>开发过程中，经常遇到本地图片资源过大导致打包尺寸太大问题，通常解决方法是：将图片资源放到服务器上，这样又回产生新的问题：</p><ol><li>开发过程中需要频繁更换图片，每次更换图片都需要重新上传图片资源，非常麻烦。</li><li>由本地图片切换成线上图片后需要去使用图片的地方修改图片路径。</li></ol><p><strong>解决思路：开发过程中使用本地图片开发，打包后自动删除本地图片并在使用处自动替换为线上路径，开发完成后统一将本地图片上传至服务器</strong></p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>待完善</p></div>',9)]))}const g=a(l,[["render",n]]);export{k as __pageData,g as default};
